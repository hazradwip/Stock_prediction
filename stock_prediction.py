# -*- coding: utf-8 -*-
"""Stock_prediciton.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UvgXTuqtIxZPQ8hbzxABvcI6oobOOwUV
"""

#dependencies
import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
plt.style.use('bmh')

#load data
from google.colab import  files
uploaded=files.upload()

#create dataframe
df=pd.read_csv('NFLX.csv')
df.head()

df["High"].head()

df.shape

df = df[['Close']]
df.head()

#prediction after 10 days
future_days=10
#new column prediction
df['Prediction']=df[['Close']].shift(-future_days)
df.head()

df.tail(11)

#feature_column
X=np.array(df.drop(['Prediction'],1))[:-future_days]
print(X)

#target_column
Y=np.array(df['Prediction'])[:-future_days]
print(Y)

#splitting of data
x_train,x_test,y_train,y_test=train_test_split(X,Y,train_size=.25)

#create model
model=DecisionTreeRegressor()
model.fit(x_train,y_train)

#test_data
p=df.drop(['Prediction'],1)#[:-future_days]
p=p.tail(future_days)
print(p)

#predicition
predict=model.predict(p)
print(predict)

#visualization
prediction=predict
new_pd=df[X.shape[0]:]
new_pd['Prediciton']=prediction


plt.figure(figsize=(16,8))
plt.title('Model')
plt.xlabel('Days')
plt.ylabel('Close Price')
plt.plot(df['Close'])
plt.plot(new_pd[['Close','Prediction']])
plt.show()